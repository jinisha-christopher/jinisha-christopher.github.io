"use strict";(self.webpackChunkjini_venishjoe_net=self.webpackChunkjini_venishjoe_net||[]).push([[2],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var l=r.createContext({}),a=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},c=function(n){var e=a(n.components);return r.createElement(l.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,i=n.originalType,l=n.parentName,c=u(n,["components","mdxType","originalType","parentName"]),s=a(t),m=o,f=s["".concat(l,".").concat(m)]||s[m]||d[m]||i;return t?r.createElement(f,p(p({ref:e},c),{},{components:t})):r.createElement(f,p({ref:e},c))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=t.length,p=new Array(i);p[0]=s;var u={};for(var l in e)hasOwnProperty.call(e,l)&&(u[l]=e[l]);u.originalType=n,u.mdxType="string"==typeof n?n:o,p[1]=u;for(var a=2;a<i;a++)p[a]=t[a];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1548:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return a},toc:function(){return c},default:function(){return s}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),p=["components"],u={sidebar_position:22,slug:"solution-20"},l="Project Euler Solution 20",a={unversionedId:"project-euler/project-euler-20",id:"project-euler/project-euler-20",isDocsHomePage:!1,title:"Project Euler Solution 20",description:"Problem Statement",source:"@site/docs/project-euler/project-euler-20.md",sourceDirName:"project-euler",slug:"/project-euler/solution-20",permalink:"/project-euler/solution-20",tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22,slug:"solution-20"},sidebar:"tutorialSidebar",previous:{title:"Project Euler Solution 19",permalink:"/project-euler/solution-19"},next:{title:"Project Euler Solution 21",permalink:"/project-euler/solution-21"}},c=[{value:"Problem Statement",id:"problem-statement",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Implementation",id:"implementation",children:[]},{value:"Sample Output",id:"sample-output",children:[]}],d={toc:c};function s(n){var e=n.components,u=(0,o.Z)(n,p);return(0,i.kt)("wrapper",(0,r.Z)({},d,u,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"project-euler-solution-20"},"Project Euler Solution 20"),(0,i.kt)("h3",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Find the sum of digits in 100!"))),(0,i.kt)("p",null,"n! means n \xd7(n-1) \xd7... \xd73 \xd72 \xd71"),(0,i.kt)("p",null,"For example, 10! = 10 \xd79 \xd7... \xd73 \xd72 \xd71 = 3628800,\nand the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27."),(0,i.kt)("p",null,"Find the sum of the digits in the number 100!"),(0,i.kt)("h3",{id:"solution"},"Solution"),(0,i.kt)("p",null,"To solve this problem, one must know what is factorial and would be able to solve few of the previous problems. Try please.."),(0,i.kt)("h3",{id:"implementation"},"Implementation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n\nint NUMBER = 100;\nint main()\n{\n    int index, val, num[3], t_prod[1000] = { 0\n    }, prod[1000] = { 0\n    }, f_prod[1000] = { 0 };\n    int pos, carry, no_dig_num, p, p_index, carry1, no_dig_prod, sum, t_dig_prod;\n    prod[0] = 1;\n    no_dig_prod = 1;\n    int sum_dig;\n    for (int i = 1; i <= NUMBER; i++)\n    {\n        val = i;\n        while (val % 10 == 0) val = val / 10;\n        if (val == 1) continue;\n        index = 0;\n        while (val != 0)\n        {\n            num[index] = val % 10;\n            val = val / 10;\n            index++;\n        }\n        no_dig_num = index;\n        carry = 0;\n        pos = 0;\n        for (int i = 0; i < no_dig_num; i++)\n        {\n            p_index = 0;\n            carry = 0;\n            for (int j = 0; j < no_dig_prod; j++)\n            {\n                p = (prod[j] *num[i]) + carry;\n                if (p < 10)\n                {\n                    t_prod[p_index] = p;\n                    carry = 0;\n                }\n                if (p >= 10)\n                {\n                    t_prod[p_index] = p % 10;\n                    p = p / 10;\n                    carry = p % 10;\n                }\n                p_index++;\n                if (j == (no_dig_prod - 1) && carry != 0)\n                {\n                    t_prod[p_index] = carry;\n                    p_index++;\n                    break;\n                }\n            }\n            carry1 = 0;\n            t_dig_prod = pos;\n            int m;\n            m = 0;\n            for (int k = pos; k < pos + p_index; k++)\n            {\n                sum = f_prod[k] + t_prod[m] + carry1;\n                if (sum < 10)\n                {\n                    f_prod[t_dig_prod] = sum;\n                    carry1 = 0;\n                }\n                if (sum >= 10)\n                {\n                    f_prod[t_dig_prod] = sum % 10;\n                    sum = sum / 10;\n                    carry1 = sum % 10;\n                }\n                t_dig_prod++;\n                if (m == (p_index - 1) && carry1 != 0)\n                {\n                    f_prod[t_dig_prod] = carry1;\n                    t_dig_prod++;\n                    break;\n                }\n                m++;\n                if (m > (p_index - 1)) break;\n            }\n            pos++;\n        }\n        no_dig_prod = t_dig_prod;\n        sum_dig = 0;\n        for (int s = 0; s < no_dig_prod; s++)\n        {\n            sum_dig = sum_dig + f_prod[s];\n            prod[s] = f_prod[s];\n            f_prod[s] = 0;\n        }\n    }\n    printf("sum :%d", sum_dig);\n    return 0;\n}\n')),(0,i.kt)("h3",{id:"sample-output"},"Sample Output"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Sample Output",src:t(3225).Z})))}s.isMDXComponent=!0},3225:function(n,e,t){e.Z=t.p+"assets/images/20-output-29c8ae97f9136951a48f3b0058125bc8.jpg"}}]);