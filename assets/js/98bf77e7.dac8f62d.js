"use strict";(self.webpackChunkjini_venishjoe_net=self.webpackChunkjini_venishjoe_net||[]).push([[932],{3905:function(t,l,n){n.d(l,{Zo:function(){return b},kt:function(){return c}});var u=n(7294);function r(t,l,n){return l in t?Object.defineProperty(t,l,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[l]=n,t}function e(t,l){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);l&&(u=u.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),n.push.apply(n,u)}return n}function k(t){for(var l=1;l<arguments.length;l++){var n=null!=arguments[l]?arguments[l]:{};l%2?e(Object(n),!0).forEach((function(l){r(t,l,n[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):e(Object(n)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(n,l))}))}return t}function d(t,l){if(null==t)return{};var n,u,r=function(t,l){if(null==t)return{};var n,u,r={},e=Object.keys(t);for(u=0;u<e.length;u++)n=e[u],l.indexOf(n)>=0||(r[n]=t[n]);return r}(t,l);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);for(u=0;u<e.length;u++)n=e[u],l.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=u.createContext({}),i=function(t){var l=u.useContext(o),n=l;return t&&(n="function"==typeof t?t(l):k(k({},l),t)),n},b=function(t){var l=i(t.components);return u.createElement(o.Provider,{value:l},t.children)},a={inlineCode:"code",wrapper:function(t){var l=t.children;return u.createElement(u.Fragment,{},l)}},s=u.forwardRef((function(t,l){var n=t.components,r=t.mdxType,e=t.originalType,o=t.parentName,b=d(t,["components","mdxType","originalType","parentName"]),s=i(n),c=r,p=s["".concat(o,".").concat(c)]||s[c]||a[c]||e;return n?u.createElement(p,k(k({ref:l},b),{},{components:n})):u.createElement(p,k({ref:l},b))}));function c(t,l){var n=arguments,r=l&&l.mdxType;if("string"==typeof t||r){var e=n.length,k=new Array(e);k[0]=s;var d={};for(var o in l)hasOwnProperty.call(l,o)&&(d[o]=l[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,k[1]=d;for(var i=2;i<e;i++)k[i]=n[i];return u.createElement.apply(null,k)}return u.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2926:function(t,l,n){n.r(l),n.d(l,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return i},toc:function(){return b},default:function(){return s}});var u=n(7462),r=n(3366),e=(n(7294),n(3905)),k=["components"],d={sidebar_position:15,slug:"solution-13"},o="Project Euler Solution 13",i={unversionedId:"project-euler/project-euler-13",id:"project-euler/project-euler-13",isDocsHomePage:!1,title:"Project Euler Solution 13",description:"Problem Statement",source:"@site/docs/project-euler/project-euler-13.md",sourceDirName:"project-euler",slug:"/project-euler/solution-13",permalink:"/project-euler/solution-13",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,slug:"solution-13"},sidebar:"tutorialSidebar",previous:{title:"Project Euler Solution 12",permalink:"/project-euler/solution-12"},next:{title:"Project Euler Solution 14",permalink:"/project-euler/solution-14"}},b=[{value:"Problem Statement",id:"problem-statement",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Implementation",id:"implementation",children:[]},{value:"Sample Output",id:"sample-output",children:[]}],a={toc:b};function s(t){var l=t.components,d=(0,r.Z)(t,k);return(0,e.kt)("wrapper",(0,u.Z)({},a,d,{components:l,mdxType:"MDXLayout"}),(0,e.kt)("h1",{id:"project-euler-solution-13"},"Project Euler Solution 13"),(0,e.kt)("h3",{id:"problem-statement"},"Problem Statement"),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},(0,e.kt)("em",{parentName:"strong"},"Find the first ten digits of the sum of one-hundred 50-digit numbers."))),(0,e.kt)("p",null,"Work out the first ten digits of the sum of the following one-hundred 50-digit numbers."),(0,e.kt)("p",null,"37107287533902102798797998220837590246510135740250",(0,e.kt)("br",null),"\n46376937677490009712648124896970078050417018260538",(0,e.kt)("br",null),"\n74324986199524741059474233309513058123726617309629",(0,e.kt)("br",null),"\n91942213363574161572522430563301811072406154908250",(0,e.kt)("br",null),"\n23067588207539346171171980310421047513778063246676",(0,e.kt)("br",null),"\n89261670696623633820136378418383684178734361726757",(0,e.kt)("br",null),"\n28112879812849979408065481931592621691275889832738",(0,e.kt)("br",null),"\n44274228917432520321923589422876796487670272189318",(0,e.kt)("br",null),"\n47451445736001306439091167216856844588711603153276",(0,e.kt)("br",null),"\n70386486105843025439939619828917593665686757934951",(0,e.kt)("br",null),"\n62176457141856560629502157223196586755079324193331",(0,e.kt)("br",null),"\n64906352462741904929101432445813822663347944758178",(0,e.kt)("br",null),"\n92575867718337217661963751590579239728245598838407",(0,e.kt)("br",null),"\n58203565325359399008402633568948830189458628227828",(0,e.kt)("br",null),"\n80181199384826282014278194139940567587151170094390",(0,e.kt)("br",null),"\n35398664372827112653829987240784473053190104293586",(0,e.kt)("br",null),"\n86515506006295864861532075273371959191420517255829",(0,e.kt)("br",null),"\n71693888707715466499115593487603532921714970056938",(0,e.kt)("br",null),"\n54370070576826684624621495650076471787294438377604",(0,e.kt)("br",null),"\n53282654108756828443191190634694037855217779295145",(0,e.kt)("br",null),"\n36123272525000296071075082563815656710885258350721",(0,e.kt)("br",null),"\n45876576172410976447339110607218265236877223636045",(0,e.kt)("br",null),"\n17423706905851860660448207621209813287860733969412",(0,e.kt)("br",null),"\n81142660418086830619328460811191061556940512689692",(0,e.kt)("br",null),"\n51934325451728388641918047049293215058642563049483",(0,e.kt)("br",null),"\n62467221648435076201727918039944693004732956340691",(0,e.kt)("br",null),"\n15732444386908125794514089057706229429197107928209",(0,e.kt)("br",null),"\n55037687525678773091862540744969844508330393682126",(0,e.kt)("br",null),"\n18336384825330154686196124348767681297534375946515",(0,e.kt)("br",null),"\n80386287592878490201521685554828717201219257766954",(0,e.kt)("br",null),"\n78182833757993103614740356856449095527097864797581",(0,e.kt)("br",null),"\n16726320100436897842553539920931837441497806860984",(0,e.kt)("br",null),"\n48403098129077791799088218795327364475675590848030",(0,e.kt)("br",null),"\n87086987551392711854517078544161852424320693150332",(0,e.kt)("br",null),"\n59959406895756536782107074926966537676326235447210",(0,e.kt)("br",null),"\n69793950679652694742597709739166693763042633987085",(0,e.kt)("br",null),"\n41052684708299085211399427365734116182760315001271",(0,e.kt)("br",null),"\n65378607361501080857009149939512557028198746004375",(0,e.kt)("br",null),"\n35829035317434717326932123578154982629742552737307",(0,e.kt)("br",null),"\n94953759765105305946966067683156574377167401875275",(0,e.kt)("br",null),"\n88902802571733229619176668713819931811048770190271",(0,e.kt)("br",null),"\n25267680276078003013678680992525463401061632866526",(0,e.kt)("br",null),"\n36270218540497705585629946580636237993140746255962",(0,e.kt)("br",null),"\n24074486908231174977792365466257246923322810917141",(0,e.kt)("br",null),"\n91430288197103288597806669760892938638285025333403",(0,e.kt)("br",null),"\n34413065578016127815921815005561868836468420090470",(0,e.kt)("br",null),"\n23053081172816430487623791969842487255036638784583",(0,e.kt)("br",null),"\n11487696932154902810424020138335124462181441773470",(0,e.kt)("br",null),"\n63783299490636259666498587618221225225512486764533",(0,e.kt)("br",null),"\n67720186971698544312419572409913959008952310058822",(0,e.kt)("br",null),"\n95548255300263520781532296796249481641953868218774",(0,e.kt)("br",null),"\n76085327132285723110424803456124867697064507995236",(0,e.kt)("br",null),"\n37774242535411291684276865538926205024910326572967",(0,e.kt)("br",null),"\n23701913275725675285653248258265463092207058596522",(0,e.kt)("br",null),"\n29798860272258331913126375147341994889534765745501",(0,e.kt)("br",null),"\n18495701454879288984856827726077713721403798879715",(0,e.kt)("br",null),"\n38298203783031473527721580348144513491373226651381",(0,e.kt)("br",null),"\n34829543829199918180278916522431027392251122869539",(0,e.kt)("br",null),"\n40957953066405232632538044100059654939159879593635",(0,e.kt)("br",null),"\n29746152185502371307642255121183693803580388584903",(0,e.kt)("br",null),"\n41698116222072977186158236678424689157993532961922",(0,e.kt)("br",null),"\n62467957194401269043877107275048102390895523597457",(0,e.kt)("br",null),"\n23189706772547915061505504953922979530901129967519",(0,e.kt)("br",null),"\n86188088225875314529584099251203829009407770775672",(0,e.kt)("br",null),"\n11306739708304724483816533873502340845647058077308",(0,e.kt)("br",null),"\n82959174767140363198008187129011875491310547126581",(0,e.kt)("br",null),"\n97623331044818386269515456334926366572897563400500",(0,e.kt)("br",null),"\n42846280183517070527831839425882145521227251250327",(0,e.kt)("br",null),"\n55121603546981200581762165212827652751691296897789",(0,e.kt)("br",null),"\n32238195734329339946437501907836945765883352399886",(0,e.kt)("br",null),"\n75506164965184775180738168837861091527357929701337",(0,e.kt)("br",null),"\n62177842752192623401942399639168044983993173312731",(0,e.kt)("br",null),"\n32924185707147349566916674687634660915035914677504",(0,e.kt)("br",null),"\n99518671430235219628894890102423325116913619626622",(0,e.kt)("br",null),"\n73267460800591547471830798392868535206946944540724",(0,e.kt)("br",null),"\n76841822524674417161514036427982273348055556214818",(0,e.kt)("br",null),"\n97142617910342598647204516893989422179826088076852",(0,e.kt)("br",null),"\n87783646182799346313767754307809363333018982642090",(0,e.kt)("br",null),"\n10848802521674670883215120185883543223812876952786",(0,e.kt)("br",null),"\n71329612474782464538636993009049310363619763878039",(0,e.kt)("br",null),"\n62184073572399794223406235393808339651327408011116",(0,e.kt)("br",null),"\n66627891981488087797941876876144230030984490851411",(0,e.kt)("br",null),"\n60661826293682836764744779239180335110989069790714",(0,e.kt)("br",null),"\n85786944089552990653640447425576083659976645795096",(0,e.kt)("br",null),"\n66024396409905389607120198219976047599490197230297",(0,e.kt)("br",null),"\n64913982680032973156037120041377903785566085089252",(0,e.kt)("br",null),"\n16730939319872750275468906903707539413042652315011",(0,e.kt)("br",null),"\n94809377245048795150954100921645863754710598436791",(0,e.kt)("br",null),"\n78639167021187492431995700641917969777599028300699",(0,e.kt)("br",null),"\n15368713711936614952811305876380278410754449733078",(0,e.kt)("br",null),"\n40789923115535562561142322423255033685442488917353",(0,e.kt)("br",null),"\n44889911501440648020369068063960672322193204149535",(0,e.kt)("br",null),"\n41503128880339536053299340368006977710650566631954",(0,e.kt)("br",null),"\n81234880673210146739058568557934581403627822703280",(0,e.kt)("br",null),"\n82616570773948327592232845941706525094512325230608",(0,e.kt)("br",null),"\n22918802058777319719839450180888072429661980811197",(0,e.kt)("br",null),"\n77158542502016545090413245809786882778948721859617",(0,e.kt)("br",null),"\n72107838435069186155435662884062257473692284509516",(0,e.kt)("br",null),"\n20849603980134001723930671666823555245252804609722",(0,e.kt)("br",null),"\n53503534226472524250874054075591789781264330331690",(0,e.kt)("br",null)),(0,e.kt)("h3",{id:"solution"},"Solution"),(0,e.kt)("p",null,"To solve this, let us consider a smaller version of the above problem"),(0,e.kt)("p",null,"37107",(0,e.kt)("br",null),"\n28753",(0,e.kt)("br",null),"\n39021",(0,e.kt)("br",null),"\n02798",(0,e.kt)("br",null),"\n79799",(0,e.kt)("br",null)),(0,e.kt)("p",null,"By solving this example, I show you how to solve the problem given."),(0,e.kt)("p",null,"Let us see how we add the above numbers manually"),(0,e.kt)("p",null,"The same method is followed here"),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Step 1:")," First add all the numbers along the last column. Initially carry = 0."),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",{bgcolor:"#92d050"},"c = 0")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"1"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",{bgcolor:"#92d050"},"7")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"5"),(0,e.kt)("td",{bgcolor:"#92d050"},"3")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",{bgcolor:"#92d050"},"1")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",{bgcolor:"#92d050"},"8")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",{bgcolor:"#92d050"},"9")))),(0,e.kt)("p",null,"Sum = 7 + 3 + 1 + 8 + 9 + 0 = 28"),(0,e.kt)("p",null,"Insert 8 into the array add update carry = 2."),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null,"8"),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null)))),(0,e.kt)("p",null," ",(0,e.kt)("strong",{parentName:"p"},"Step 2:")," Add all the numbers in the 4th column"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",{bgcolor:"#92d050"},"c = 2"),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"1"),(0,e.kt)("td",{bgcolor:"#92d050"},">0"),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",{bgcolor:"#92d050"},">5"),(0,e.kt)("td",null,"3")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",{bgcolor:"#92d050"},">2"),(0,e.kt)("td",null,"1")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",{bgcolor:"#92d050"},">9"),(0,e.kt)("td",null,"8")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",{bgcolor:"#92d050"},">9"),(0,e.kt)("td",null,"9")))),(0,e.kt)("p",null,"Sum = 0 + 5 + 2 + 9 + 9 + 2 = 27"),(0,e.kt)("p",null,"Insert 7 into the array and update carry = 2"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null)))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Step 3:")," Add all numbers in the 3rd column"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",{bgcolor:"#92d050"},"c = 2"),(0,e.kt)("td",null),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",{bgcolor:"#92d050"},"1"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"8"),(0,e.kt)("td",{bgcolor:"#92d050"},"7"),(0,e.kt)("td",null,"5"),(0,e.kt)("td",null,"3")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",{bgcolor:"#92d050"},"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"1")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",{bgcolor:"#92d050"},"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"8")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",{bgcolor:"#92d050"},"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"9")))),(0,e.kt)("p",null,"Sum = 1 + 7 + 0 + 7 + 7 + 2 = 24"),(0,e.kt)("p",null,"Insert 4 into the array ; update Carry = 2"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"4"),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null)))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Step 4:")," Add numbers in the 2nd column"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null),(0,e.kt)("td",{bgcolor:"#92d050"},"c = 2"),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",{bgcolor:"#92d050"},"7"),(0,e.kt)("td",null,"1"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",null,"2"),(0,e.kt)("td",{bgcolor:"#92d050"},"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"5"),(0,e.kt)("td",null,"3")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"3"),(0,e.kt)("td",{bgcolor:"#92d050"},"9"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"1")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"0"),(0,e.kt)("td",{bgcolor:"#92d050"},"2"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"8")),(0,e.kt)("tr",null,(0,e.kt)("td",null,"7"),(0,e.kt)("td",{bgcolor:"#92d050"},"9"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"9")))),(0,e.kt)("p",null,"Sum = 7 + 8 + 9 + 2 + 9 + 2 = 37"),(0,e.kt)("p",null,"Insert 7 into the array, update carry = 3"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"4"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null),(0,e.kt)("td",null)))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Step 5:")," Add numbers in the first column"),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"c = 3"),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"3"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"1"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null)),(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"2"),(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"5"),(0,e.kt)("td",null,"3")),(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"3"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"1")),(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"0"),(0,e.kt)("td",null,"2"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"8")),(0,e.kt)("tr",null,(0,e.kt)("td",{bgcolor:"#92d050"},"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"9"),(0,e.kt)("td",null,"9")))),(0,e.kt)("p",null,"Sum = 3 + 2 + 3 + 0 + 7 + 3 = 18."),(0,e.kt)("p",null,"Insert 8 into the array, update carry = 1. There is no more columns and so simply insert the carry into the next position in the array."),(0,e.kt)("table",null,(0,e.kt)("tbody",null,(0,e.kt)("tr",null,(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"4"),(0,e.kt)("td",null,"7"),(0,e.kt)("td",null,"8"),(0,e.kt)("td",null,"1")))),(0,e.kt)("p",null,"The final sum is actually stored in the reverse direction. So to get the first 10 digits, program accordingly."),(0,e.kt)("h3",{id:"implementation"},"Implementation"),(0,e.kt)("pre",null,(0,e.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n\nchar a[50], char b;\nint number[100][50], final_sum[100];\nint index, i, digits, count, row, column, sum;\nFILE * fp;\n\nint main()\n{\n    index, i = 0, digits = 0, count = 0;\n    //Input in the file is transfered to a two dimensional integer array number[][]\n    fp = fopen("input013.txt", "rt");\n    while (fscanf(fp, "%s", a) == 1 && i < 100)\n    {\n        for (index = 0; index < 50; index++)\n        {\n            b = a[index];\n            number[i][index] = atoi(&b);\n        }\n        i++;\n    }\n    fclose(fp);\n    //Sum of humdred fifty-digit numbers is found and stored in an array final_sum[]\n    sum = 0;\n    for (column = 49; column >= 0; column--)\n    {\n        for (row = 0; row < 100; row++) sum = sum + number[row][column];\n        if (sum < 10) final_sum[digits] = sum;\n        if (sum >= 10 && column != 0)\n        {\n            final_sum[digits] = sum % 10;;\n            sum = sum / 10;\n        }\n        if (column != 0) digits++;\n        if (column == 0 && sum >= 10)\n        {\n            while (sum >= 10)\n            {\n                final_sum[digits] = sum % 10;\n                sum = sum / 10;\n                digits++;\n            }\n            if (sum < 10)\n            {\n                final_sum[digits] = sum;\n            }\n        }\n    }\n    //Display the first 10 digits of the sum of hundred fifty-digit numbers\n    count = 0;\n    while (count < 10)\n    {\n        printf("%d", final_sum[digits]);\n        digits--;\n        count++;\n    }\n    return 0;\n}\n')),(0,e.kt)("h3",{id:"sample-output"},"Sample Output"),(0,e.kt)("p",null,(0,e.kt)("img",{alt:"Sample Output",src:n(6414).Z})))}s.isMDXComponent=!0},6414:function(t,l,n){l.Z=n.p+"assets/images/13-output-1f7b421b22b7f248ef643bde0b1f6028.jpg"}}]);